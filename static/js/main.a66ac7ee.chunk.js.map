{"version":3,"sources":["components/Users/users.module.css","components/Nav/Nav.module.css","api/Api.js","redux/profile-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Nav/Nav.js","components/Settings/Settings.jsx","components/Common/paginator/Paginator.jsx","redux/users-selectors.js","components/Users/Users.jsx","components/Common/Preloader/Preloader.js","components/Users/UsersContainer.js","components/Profile/Profile Info/ProfileStatusWithHooks.jsx","components/Profile/Profile Info/ProfileStatus.jsx","components/Profile/Profile Info/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profilepage.js","components/Profile/ProfilepageContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/login/Login.jsx","App.js","reportWebVitals.js","index.js","components/Common/FormsControls/FormsControls.module.css","utils/Validators/validators.js","components/Common/FormsControls/FormsControls.js","components/Common/paginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","redux/dialogs-reducer.js","hoc/withAuthRedirect.js","components/Profile/Profile Info/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profilePageAPI","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","count","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","filter","p","postId","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","u","followed","SET_USER_DATA","login","isAuth","setAuthUserData","payload","getAuth","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogReducer","usersPage","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Nav","className","classes","nav","profileImage","item","to","activeClassName","activeLink","Settings","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","styles","paginator","onClick","selectedPage","noSelectedPage","e","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","Users","props","src","photos","small","userPhoto","alt","disabled","some","name","Preloader","UsersContainer","pageNumber","this","React","Component","connect","bind","page","items","totalCount","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","descriptionBlock","fullName","large","aboutMe","contacts","facebook","website","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","Post","like","MyPosts","memo","postsElements","addPost","AddPostFormRedux","onSubmit","values","maxLength10","maxLengthCreator","reduxForm","handleSubmit","addMessage","Field","component","Textarea","placeholder","validate","requiredField","MyPostsContainer","addPostActionCreator","ProfilePage","ProfilePageContainer","match","params","authorizedUserId","getProfilePage","getStatus","withRouter","withAuthRedirect","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","error","Input","style","formSummaryError","messages","length","stopSubmit","_error","formData","DialogsContainer","lazy","News","Music","App","initializeApp","path","render","Suspense","fallback","ProfilepageContainer","AppContainer","promise","Promise","all","MaineApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","maxLength","input","meta","hasError","touched","formControl","messagesData","dialogsData","sendMessageCreator","newMessageBody","body","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.a66ac7ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__JMHOR\",\"selectedPage\":\"users_selectedPage__1_cHY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1vQ-B\",\"item\":\"Nav_item__3zb72\",\"activeLink\":\"Nav_activeLink__bbLRi\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'd2011f6b-32e3-42ff-a059-a0c07eeb1179'}\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const profilePageAPI = {\r\n    getProfilePage(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus (status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login (email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n","import {profilePageAPI} from \"../api/Api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello', count: 12},\r\n        {id: 2, message: 'How are you', count: 11},\r\n        {id: 3, message: 'Life is great', count: 0},\r\n        {id: 4, message: 'Sun shine', count: 5},\r\n        {id: 5, message: 'Yo', count: 12},\r\n        {id: 6, message: 'Wats up', count: 12},\r\n        {id: 7, message: 'Kiks', count: 12},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                count: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [(newPost), ...state.posts],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case 'SET-USER-PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case 'SET-STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'DELETE_POST': {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getProfilePage = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profilePageAPI.getProfilePage(userId)\r\n\r\n        dispatch(setUserProfile(response.data));\r\n    };\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profilePageAPI.getStatus(userId)\r\n\r\n        dispatch(setStatus(response.data));\r\n    };\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profilePageAPI.updateStatus(status)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    };\r\n}\r\n\r\nexport default profileReducer;","import {userAPI} from \"../api/Api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await userAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) =>{\r\n\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = userAPI.follow.bind(userAPI)\r\n        let actionCreator = followSuccess\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = userAPI.unfollow.bind(userAPI)\r\n        let actionCreator = unfollowSuccess\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = '/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuth = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuth())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages [0] : \"some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n\r\n    };\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    };\r\n\r\nexport default authReducer;","import {getAuth} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuth());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n    };\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore,} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport classes from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.profileImage}>\r\n\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Message</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\"\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize +1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {setPortionNumber(portionNumber -1)}}>...</button>}\r\n        {pages\r\n            .filter(p => p >=leftPortionPageNumber && p<=rightPortionNumber)\r\n            .map ((p) => {\r\n            return <span className={`${currentPage === p ? styles.selectedPage : styles.noSelectedPage }`}\r\n                         onClick={(e) => {\r\n                             onPageChanged(p);\r\n                         }}>{p}</span>\r\n        })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {setPortionNumber(portionNumber+1)}}>...</button>}\r\n        </div>\r\n}\r\n\r\nexport default Paginator;","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react'\r\nimport styles from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/paginator/Paginator\"\r\nimport {getTotalUsersCount} from \"../../redux/users-selectors\";\r\n\r\nlet Users = (props) => {\r\n    return <div>\r\n        <Paginator totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} currentPage={props.currentPage} onPageChanged={props.onPageChanged}/>\r\n        {props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : \"https://i.ibb.co/km2ndtc/standart-User.jpg\"}\r\n                         className={styles.userPhoto} alt=\"\"/>\r\n                         </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  onClick={() => {\r\n                                      props.unfollow(u.id)\r\n                                  }}> Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                  onClick={() => {\r\n                                      props.follow(u.id)\r\n                                  }}> Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                     <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>\r\n                        {\"u.location.country\"}\r\n                     </div>\r\n                    <div>\r\n                        {\"u.location.city\"}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n        </div>)}\r\n    </div>\r\n}\r\nexport default Users;","import React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={'https://i.ibb.co/0KQ5L2d/22.gif'}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage, toggleIsFollowingProgress,\r\n    unfollow\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n        this.props.setCurrentPage(pageNumber)\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers: requestUsers\r\n    }))(UsersContainer)","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() =>{\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || \"----\"}</span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deActivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </ div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport dialogReducer from \"../../../redux/dialogs-reducer\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: true,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    }\r\n    deActivateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.editMode == true ?\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus.jsx\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <div>\r\n        {/*<div className={classes.img}>\r\n            <img src='https://i.ibb.co/mTfnGY3/background-crop.jpg'/>\r\n        </div>*/}\r\n        <div className={classes.descriptionBlock}>\r\n            <div>{props.profile.fullName}</div>\r\n            <div>{props.profile.photos.large === null ? <img src='https://i.ibb.co/km2ndtc/standart-User.jpg'/> : <img src={props.profile.photos.large}/>}</div>\r\n            <div> status: <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            <div>Про меня: {props.profile.aboutMe}</div>\r\n            <div>Контакты\r\n                <div>facebook: {props.profile.contacts.facebook}</div>\r\n                <div>website: {props.profile.contacts.website}</div>\r\n                <div>twitter: {props.profile.contacts.twitter}</div>\r\n                <div>instagram: {props.profile.contacts.instagram}</div>\r\n                <div>youtube: {props.profile.contacts.youtube}</div>\r\n                <div>github: {props.profile.contacts.github}</div>\r\n                <div>mainLink: {props.profile.contacts.mainLink}</div>\r\n            </div>\r\n            <div>\r\n                Ищу работу {props.profile.lookingForAJob === true? '✅': '☒'} <br/>\r\n                Пожелания к работе: {props.profile.lookingForAJobDescription}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={classes.item}>\r\n            <img\r\n                src='https://static-25.sinclairstoryline.com/resources/media/3f1ef009-5f3d-4be8-6f0e-6ab0862f00b5-largeScale_KendallBartley2020_webphoto320x4201.png?1603404656511'/>\r\n            { props.message }\r\n            <div className={classes.like}>\r\n                <span>  like - </span>\r\n                {props.count}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/Validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo (props => {\r\n    let postsElements = props.posts.map(post => <Post message={post.message} count={post.count}/>)\r\n\r\n    let newPostElement = React.createRef ();\r\n\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.addPost}>\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>)\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator (10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.addMessage} >\r\n            <Field component={Textarea} name=\"newPostText\" placeholder=\"type your text here\" validate={[requiredField, maxLength10]}/>\r\n            <button>Add Post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostFormRedux = reduxForm ({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer.js\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./Profile Info/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst ProfilePage = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getProfilePage, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport ProfilePage from \"./Profilepage\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfilePageContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfilePage(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ProfilePage {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfilePage,\r\n        getStatus,\r\n        updateStatus,\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfilePageContainer)","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img src='https://i.ibb.co/sy9D123/logo.png'/>\r\n        <div className={classes.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>logout</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n        </div>\r\n    </header>\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {requiredField} from \"../../utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../Common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><Field component={Input} name={\"email\"} placeholder={\"email\"} validate={[requiredField]}/></div>\r\n            <div><Field component={Input} name={\"password\"} placeholder={\"password\"} type={\"password\"}\r\n                        validate={[requiredField]}/></div>\r\n            <div><Field component={Input} name={\"rememberMe\"} type=\"checkbox\"/>remember me</div>\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <div>\r\n                <button>login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({login, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>\r\n            login\r\n        </h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import './App.css';\nimport Nav from \"./components/Nav/Nav\";\n/*import News from \"./components/News/News\";*/\n/*import Music from \"./components/Music/Music\";*/\nimport Settings from \"./components/Settings/Settings\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport React from 'react';\n/*import DialogsContainer from \"./components/Dialogs/DialogsContainer\";*/\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfilepageContainer from \"./components/Profile/ProfilepageContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <BrowserRouter>\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Nav/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/dialogs' render={() => {\n                            return <React.Suspense fallback={<div><Preloader/></div>}>\n                                <DialogsContainer/>\n                            </React.Suspense>\n                        }}/>\n\n                        <Route path='/profile/:userId?' render={() => <ProfilepageContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/news' render={() => {\n                            return <React.Suspense fallback={<div><Preloader/></div>}>\n                                <News/>\n                            </React.Suspense>\n                            }}/>\n                        <Route path='/music' render={() => {\n                            return <React.Suspense fallback={<div><Preloader/></div>}>\n                                <Music/>\n                            </React.Suspense>\n                            }}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer = connect(mapStateToProps, {initializeApp})(App);\n\nconst MaineApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\nexport default MaineApp","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport MaineApp from \"./App\";\n\nReactDOM.render(\n    < MaineApp />,\n    document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__TDhgp\",\"error\":\"FormsControls_error__T1mQF\",\"formSummaryError\":\"FormsControls_formSummaryError__1Wjrp\"};","export const requiredField = (value) => {\r\n    if (value) return undefined;\r\n    return \"field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <textarea {...input}{...props}/>\r\n            </div>\r\n                { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input}{...props}/>\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3axEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1e7Ay\",\"addPost\":\"MyPosts_addPost__5oJg_\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: '1', message: 'Hello'},\r\n        {id: '2', message: 'How are you'},\r\n        {id: '3', message: 'Life is great'},\r\n        {id: '4', message: 'Sun shine'},\r\n        {id: '5', message: 'Я хочу выпить'},\r\n        {id: '6', message: 'Куда пойдем?'},\r\n        {id: '7', message: 'Кикс'}\r\n    ],\r\n        dialogsData: [\r\n        {id: '1', name: 'Vitalik'},\r\n        {id: '2', name: 'Yana'},\r\n        {id: '3', name: 'Anya'},\r\n        {id: '4', name: 'Kolya'},\r\n        {id: '5', name: 'Nastya'},\r\n        {id: '6', name: 'Marina'},\r\n        {id: '7', name: 'VitalikR'},\r\n    ]\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = {\r\n        ...state,\r\n        /*messagesData: [...state.messagesData]*/\r\n    };\r\n\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE':\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n            messagesData: [...state.messagesData, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogReducer;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to = '/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__3FkAx\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1h-Pr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__16nFc\",\"like\":\"Post_like__3y2vY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__C3RXf\",\"loginBlock\":\"Header_loginBlock__8urDa\"};"],"sourceRoot":""}