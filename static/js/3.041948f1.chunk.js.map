{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","dialogPath","id","className","classes","item","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","addMessage","Field","component","Textarea","placeholder","validate","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","dialog","messagesElements","messagesData","newMessageBody","isAuth","dialogs","dialogsItems","messages","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,kGCYhMC,EATI,SAACC,GAChB,IAAIC,EAAa,YAAcD,EAAME,GACrC,OACI,qBAAKC,UAAWC,IAAQC,KAAO,IAAMD,IAAQE,OAA7C,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAA0BD,EAAMQ,UCC7BC,EANC,SAACT,GACb,OACI,sBAAKG,UAAWC,IAAQM,QAAxB,cAAmCV,EAAMU,Y,kCCoC3CC,EAAcC,YAAkB,GAWhCC,EAAsBC,YAAW,CAACC,KAAK,wBAAjBD,EAVL,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAcd,UAAWC,IAAQc,WAAvD,UACI,+IACA,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUb,KAAK,iBAAiBc,YAAY,yBAAyBC,SAAU,CAACZ,KAClG,oDAOGa,EAxCC,SAACxB,GACb,IAAIyB,EAAQzB,EAAM0B,YACdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAOtB,KACbN,GAAI4B,EAAO5B,IADa4B,EAAO5B,OAE7F6B,EAAmBN,EAAMO,aAAaH,KAAI,SAAAnB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QACjBR,GAAIQ,EAAQR,IADmBQ,EAAQR,OAEpFuB,EAAMQ,eAM3B,OAAKjC,EAAMkC,OAGP,sBAAK/B,UAAWC,IAAQ+B,QAAxB,UACI,qBAAKhC,UAAWC,IAAQgC,aAAxB,SACKT,IAEL,qBAAKxB,UAAWC,IAAQiC,SAAxB,SACKN,IAEL,cAAClB,EAAD,CAAqBG,SAdT,SAACsB,GACjBtC,EAAMuC,YAAYD,EAAOL,sBAGH,cAAC,IAAD,CAAU1B,GAAI,Y,uBCJ7BiC,sBACXC,aAfkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACgB,GACtB,MAAO,CACHH,YAAa,SAACN,GACVS,EAASC,YAAmBV,SAQpCW,IAFWJ,CAGZhB","file":"static/js/3.041948f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__18njo\",\"dialogsItems\":\"Dialogs_dialogsItems__gApDZ\",\"item\":\"Dialogs_item__2VLUb\",\"active\":\"Dialogs_active__2n6mB\",\"messages\":\"Dialogs_messages__33c31\",\"message\":\"Dialogs_message__3lpmJ\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let dialogPath = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={classes.item + ' ' + classes.active}>\r\n            <NavLink to={dialogPath}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}> {props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {\r\n    sendMessageCreator,\r\n    updateNewMessageBodyCreator,\r\n    updateNewPostTextActionCreator\r\n} from \"../../redux/dialogs-reducer.js\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/Validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id}\r\n                                                                      id={dialog.id}/>)\r\n    let messagesElements = state.messagesData.map(message => <Message message={message.message} key={message.id}\r\n                                                                      id={message.id}/>)\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator (2);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.addMessage} >\r\n            <p>Отправить сообщение:</p>\r\n            <Field component={Textarea} name=\"newMessageBody\" placeholder=\"type your message here\" validate={[maxLength50]}/>\r\n            <button>Add Post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm ({form:\"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer.js\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)"],"sourceRoot":""}